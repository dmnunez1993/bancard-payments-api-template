#!/usr/bin/env python3
import getpass
import subprocess
import os

POSTGRESQL_VOLUME_NAME = 'bancard_payments_api_dev_postgresql_volume'

VOLUMES = [POSTGRESQL_VOLUME_NAME]


def run_command(command, hide_std=False):
    if hide_std:
        with open(os.devnull, 'w', encoding='utf-8') as dev_null:
            return subprocess.call(
                command, shell=True, stdout=dev_null, stderr=dev_null
            )
    return subprocess.call(command, shell=True)


def get_repo_root():
    return subprocess.check_output(
        'git rev-parse --show-toplevel'.split(), encoding='utf-8'
    ).strip()


def check_volume_exists(volume_name):
    command = "docker volume inspect {}".format(volume_name)
    ret = run_command(command, True) == 0
    return ret


def run_dev_environment():
    user = getpass.getuser()
    uid = os.getuid()
    docker_args = []

    for volume_name in VOLUMES:
        if not check_volume_exists(volume_name):
            print("Creating {} volume...".format(volume_name))
            run_command("docker volume create {}".format(volume_name), True)

    home_folder = os.path.expanduser("~")
    docker_args.append("-it")
    docker_args.append("--rm")
    docker_args.append("--name=\"bancard_payments_api_dev_env\"")
    docker_args.append("-p 1883:1883")
    docker_args.append("-p 3000:3000")
    docker_args.append("-p 8000:8000")
    docker_args.append("-p 8001:8001")
    docker_args.append("-p 9883:9883")
    docker_args.append("-p 25430:5432")
    docker_args.append(f"--user {uid}:{uid}")
    docker_args.append(f"-e USER={user}")
    docker_args.append(
        "--volume {}/.bancard_payments_api_dev_env/user/:/home/{}/".format(
            home_folder, user
        )
    )
    docker_args.append(
        f"--volume {home_folder}/.ssh/:/home/{user}/.ssh/"
    )
    docker_args.append(
        f"--volume {home_folder}/.gitconfig:/home/{user}/.gitconfig"
    )
    docker_args.append(
        f"--volume {get_repo_root()}:/bancard_payments_api/"
    )
    docker_args.append(
        f"--volume {POSTGRESQL_VOLUME_NAME}:/var/lib/postgresql/"
    )
    docker_args.append("--name bancard_payments_api_dev_env")
    docker_args.append("--hostname bancard_payments_api_dev_env")
    docker_args.append("--workdir /bancard_payments_api/")

    docker_args = ' '.join(docker_args)
    docker_command = f"docker run {docker_args} bancard_payments_api_dev_env setup_env"

    run_command(
       f"mkdir -p {home_folder}/.bancard_payments_api_dev_env/user/".format(home_folder)
    )
    run_command(
        f"mkdir -p {home_folder}/.bancard_payments_api_dev_env/go/"
    )
    run_command(docker_command)


def attach_dev_environment():
    uid = os.getuid()
    command = 'docker exec -it --user {}:{} bancard_payments_api_dev_env attach_env'
    run_command(command.format(uid, uid))


def is_running():
    command = 'docker ps | grep bancard_payments_api_dev_env > /dev/null'
    try:
        subprocess.check_call(command, shell=True)
    except Exception:
        return False

    return True


def main():
    if not is_running():
        run_dev_environment()
    else:
        attach_dev_environment()


if __name__ == '__main__':
    main()
